VERSION 0.6

min:
    FROM +ubuntu-installs
    WORKDIR /app
    COPY requirements_step_1.txt ./requirements_step_1.txt
    COPY requirements_step_2.txt ./requirements_step_2.txt
    RUN pip install --upgrade pip
    #RUN pip install -r requirements_step_1.txt
    #RUN pip install -r requirements_step_2.txt
    ARG DOCKER_TAG
    SAVE IMAGE --push sesgoe/earthly-invalid-cache-repro:min_$DOCKER_TAG


ubuntu-installs:
    FROM ubuntu:20.04

    RUN apt-get update
    RUN apt-get install -y apt-transport-https

    RUN apt-get install -y software-properties-common vim
    RUN apt-get install -y build-essential python3 python3-dev python3-pip python3-venv python3-setuptools
    RUN apt-get install --no-install-recommends --yes --force-yes locales

    # Install the Doppler CLI
    RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg && \
    curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | apt-key add - && \
    echo "deb https://packages.doppler.com/public/cli/deb/debian any-version main" | tee /etc/apt/sources.list.d/doppler-cli.list && \
    apt-get update && \
    apt-get -y install doppler

    RUN locale-gen en_US.UTF-8
    ENV LANG en_US.UTF-8
    ENV LANGUAGE en_US:en
    ENV LC_ALL en_US.UTF-8

    RUN apt-get install -y python3-wheel python3-cffi
    RUN apt-get install -y libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info
    RUN apt-get install -y git mysql-client iputils-ping tmux tcpdump wget
    RUN apt-get install -y net-tools strace lsof
    RUN apt-get install -y libcurl4 libcurl4-openssl-dev curl
    RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

    # update pip
    RUN python3 -m pip install pip --upgrade
    RUN python3 -m pip install wheel
    RUN pip install --upgrade setuptools

    ENV TZ=UTC
    RUN DEBIAN_FRONTEND=noninteractive apt-get install tzdata
    RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    RUN dpkg-reconfigure --frontend noninteractive tzdata

    # install flyway
    RUN wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/7.5.2/flyway-commandline-7.5.2-linux-x64.tar.gz | tar xvz && ln -s `pwd`/flyway-7.5.2/flyway /usr/local/bin
    SAVE IMAGE --push sesgoe/earthly-invalid-cache-repro:ubuntu-installs